version: '3.4'

services:
  elasticsearch:
    container_name: es-container
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    restart: always
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - es-net

  kibana:
    container_name: kb-container
    image: docker.elastic.co/kibana/kibana:7.17.0
    environment:
      - ELASTICSEARCH_HOSTS=http://es-container:9200
    networks:
      - es-net
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601

  apm-server:
    container_name: apm-server
    image: docker.elastic.co/apm/apm-server:7.17.0
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    depends_on:
      - elasticsearch
    volumes:
      - ./apm-server.yml:/usr/share/apm-server/apm-server.yml:ro  
    ports:
      - 8200:8200
    networks:
      - es-net
    command: --strict.perms=false
    environment:
      - KIBANA_HOST=localhost
      - KIBANA_PORT=5601
      - ELASTICSEARCH_LOGGING_HOST=localhost
      - ELASTICSEARCH_LOGGING_PORT=9200
      - APM_SECRET_TOKEN=9426C166-8395-4A5E-81AF-C5A19AD3BF4F
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8200']
      interval: 20s
      timeout: 3s
      retries: 10

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:7.17.0
    hostname: "elastic-metricbeat"
    container_name: elastic-metricbeat
    user: root
    restart: always
    command: ["--strict.perms=false", "-e", "--system.hostfs=/hostfs"]
    environment:
      - KIBANA_HOST=localhost
      - KIBANA_PORT=5601
      - ELASTICSEARCH_LOGGING_HOST=localhost
      - ELASTICSEARCH_LOGGING_PORT=9200
    networks:
      - es-net